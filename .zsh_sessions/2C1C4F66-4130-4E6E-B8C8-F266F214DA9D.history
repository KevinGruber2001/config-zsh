touch zshrc
nvim zshrc
touch .zshrc
rm zshrc
nvim .zsh
mkdir themes
nvim .zsh_history
cd the
cd themes
git clone git@github.com:spaceship-prompt/spaceship-prompt.git
touch spaceship.zsh
nv spaceship.zsh
nvim spaceship.zsh
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k\
echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
p10k 
git clone  https://gitee.com/romkatv/powerlevel10k.git ~/.config/zsh/themes/powerlevel10k
git clone git@github.com:zdharma-zmirror/fast-syntax-highlighting.git
git clone git@github.com:zsh-users/zsh-autosuggestions.git
git clone git@github.com:zsh-users/zsh-completions.git
cd zsh-autosuggestions
cd .zshrc
cd .
cd .config/zsh/plugins
git clone https://github.com/jeffreytse/zsh-vi-mode.git
cd  cd .config/zsh/.zshrc
brew install exa
lsl
rm -r nvim
sudo rm -r nvim
git clone --depth 1 https://github.com/AstroNvim/AstroNvim ~/.config/nvim
nvim zsh/.zshrc
touch ]catppuccin-mocha.yml
touch catppuccin-mocha.yml
rm ]catppuccin-mocha.yml
nvim catppuccin-mocha.yml
brew tab homebrew/cask-fonts
sudo brew tab homebrew/cask-fonts
brew tap homebrew/cask-fonts
brew install --cask font-jetbrains-mono-nerd-font
cd .config/alacritty
nvim alacritty.yml
cd zsh/themes
cd powerlevel10k
cd themes/powerlevel10k
nvim powerlevel10k.zsh-theme
cd config
nvim p10k-classic.zsh
vim README.md
nvim .p10k.zsh
p10k configure
echo "heeeelelelele"
echo .config
echo "hello"
ls -lah
rm -r .oh-my-zsh
sudo rm -r .oh-my-zsh
sudo rm -r powerlevel10k
sudo rm -r .zshrc
sudo rm -r .wakatime
sudo rm -r .wakatime-internal.cfg
sudo rm -r .wakatime.bdb
sudo rm -r .wakatime.cfg
sudo rm -r .wakatime.log
sudo rm -r .ory-cloud.json
sudo rm -r .zcompdump-MacBook\ Pro\ \(3\)-5.8.1
sudo rm -r .zcompdump-MacBook\ Pro\ von\ Kevin-5.8
sudo rm -r .zcompdump-MacBook\ Pro\ von\ Kevin-5.8.1
sudo rm -r .zcompdump-MacBook\ Pro-5.8.1 
clear 
sudo rm angular-config.json
sudo rm -r .angular-config.json
nvim .asdf
cd .as
cd .asdf
cd ../installs
nvim .aspnet
sudo rm -r .
sudo rm -r .aspnet
sudo rm -r .bash_history
sudo rm -r .bash_profile
brew cabal
brew services stop redis
brew uninstall cabal
cabal
nvim .yarnrc
nvim .nestrc
cd go
nvim .vim
cd .vim
rm -r spaceship.zsh
cd limelight
rm -r limelight
cd .Trash
cd dotfiles-master
cat README.md
config
config add alacritty
config rm ../.zshrc
config add yabai
config add nvim
config add zsh
config status
config commit -m "Added alecritty and movec zsh"
config push
code gruber_app
git push --set-upstream origin master
git branch -m master main
git remote add gruber_app git@github.com:KevinGruber2001/gruber-app.git
git push --set-upstream origin main
git remote add origin git@github.com:KevinGruber2001/gruber-app.git
cd Developer/Projecte/warmwasser
cd gruber_home
rm -rf gruber_home
cd gruber_app
cd ww_client
git config --global init.defaultBranch main
cd ww_device
brew install syncthing
cd /Users/kevingruber//Library/Mobile\ Documents/com~apple~CloudDocs
cd Notes
cd UNI
la
cd ~/Library/Mobile Documents/com~apple~CloudDocs
~/Library/Mobile Documents/com~apple~CloudDocs
cd Mobile\\\ Documents
cd Mobile\ Documents
cd com~apple~CloudDocs
cd Documents
git config user.mail
git config user.name
git config --global user.email "kevingruber01@protonmail.com"
git config --list
git config --global user.name "KevinGruber01"
brew install adb
cd .config/zsh/.zshrc
vim .config/zsh/.zshrc
la -a
cd .zshenv
cd zsh
touch .zshenv
cd .config/zsh/
rm -r .zshenv
nvim .zshenv
cd $HOME
cd Downloads
cd platform-tools
./adb devices
adb
git init\\

git remote add origin git@github.com:KevinGruber2001/gruber-warmwater-relay.git
git commit -m "Added env to gitignore"
adb reboot bootloader
sudo adb reboot bootloader
adb devices
brew services start mosquitto
ping 192.168.178.190
ping 192.168.178.201
ping 192.168.178.202
ping 192.168.178.203
ping 192.168.178.204
ip a
ip address
mosquitto_pub -b 192.168.178.202 -t "test" -m "hello"
mosquitto_pub -h 192.168.178.202 -t "test" -m "hello"
exit
brew services stop mosquitto
git remote add origin git@github.com:KevinGruber2001/gruber-warmwater-switch.git
git push -u origin main --force
git commit -m "Changed to env Variables via build flags"
git restore --staged config.ini
git rm -r --cached config.ini
git commit -m "Added config.ini"
git update-index --assume-unchanged config.ini
git status
git commit -m "Added to gitignore"
git commit -m "Reformated to Led Class"
mosquitto_sub -h 192.168.178.202
mosquitto_sub -h 192.168.178.202 -t "t"
mosquitto_sub -h 192.168.178.202 -t "*"
git commit -m "Updated mqtt broker"
rm -rf hydra
cd advatens_station
code 
cd Test\ Lmic
git clone git@github.com:AdvaTens/station.git
code station
cd core
docker run -it --rm brandoncc/vim-be-good:stable
docker run -it --rm brandoncc/vim-be-good:latest\

cd .config/nvim/
cd lus
cd astronvim
cd configs
bash <(curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh)
/Users/kevingruber/.local/bin/lvim
cd /Users/kevingruber/.local/bin/lvim/
cd .config/nvim/lua/
cd /Users/kevingruber/.local/bin/
git clone git@github.com:KevinGruber2001/kickstart.nvim.git
git clone git@github.com:KevinGruber2001/kickstart.nvim.git nvim
cd .config/zsh
cd ../nvim
\:Mason
mkdir -p lua/core
cd Developer/Projecte/advatens/station
docker pull influxdb
docker run -p 8084:8084 influxdb:latest
docker exec -it d1b32febbf7658ef34c410239b856d2891c08c3fa3625a0f9f2a86e00948ff29 /bin/sh
docker exec -it 466d070ffa086222188f43ec7f0f1ac7dff176ac26514086e1eae82e0c82ea4a /bin/sh
brew install cfssl
rm -rf certs
mkdir certs
cd certs
mkdir advatens
cd ad
mkdir mosquitto
mkdir ca
touch ca-csr.json
touch ca-config.json
nano ca-csr.json
nano ca-config.json
mkdir server-cert
cd server-cert
rm -rf server-cert
cd ca
touch mqtt-server.json
nano mqtt-server.json
cd cd /etc/
docker exec -it c535ab20cccee02987564dbf05f27fc1a10eb12f71086cca0de17b98e2ca5518 /bin/sh
docker exec -it 2002aa1a2cf92edc2a4d24b6669b3fd46ae57a37494fe3e60900548f15760a2b /bin/sh
nano
cd /etc/mosquitto
cd /etc
cd /etc/
docker exec -it 53974380aa61c07d41e817a542f8d41c983b0c8312689266c039db1c88d29a54 /bin/sh
docker-compose down
docker-compose up
cd certs/advatens/mosquitto/ca
nano mqtt-server.pem
nano mqtt-server-key.pem
rm -rf ca
lx
touch ca.pem
touch key.pem
touch cert.pem
nano cert.pem
nano key.pem
mosquitto_sub -h localhost -p 8883 --cafile ca.pem --cert cert.pem --key key.pem  -t "#" -v -d\

nano ca.pem
sudo mosquitto_sub -h localhost -p 8883 --cafile ca.pem --cert cert.pem --key key.pem  -t "#" -v -d\

docker exec -it bb0d025b1ef712663db9128ccda64ac3dde733f1fbd1ab4b51f6852a07907c89 /bin/sh
cd etc
cd mosquitto
cd Developer/cert
vim ca-config.json
vim ca-csr.json
cfssl gencert -initca ca-csr.json | cfssljson -bare ca\

cfssl gencert -ca ca.pem -ca-key ca-key.pem -config ca-config.json -profile server mqtt-server.json | cfssljson -bare mqtt-server\

mosquitto_sub  -h localhost -t "#" -v -d
mosquitto_sub -h 192.168.178.190 -p 8883 --cafile ca.pem --cert cert.pem --key key.pem  -t "#" -v -d\

mosquitto_sub -h 192.168.178.190 -p 8883 --cafile ca.pem --cert cert.pem --key key.pem  -t "+/gateway/%u/#" -v -d\

vim mqtt-server.json
cfssl gencert -ca ca.pem -ca-key ca-key.pem -config ca-config.json -profile server mqtt-server.json | cfssljson -bare mqtt-server
vim ca.pem
vim cert.pem
vim key.pem
mosquitto_sub  -h localhost -t "#" -v -d\

mosquitto_sub -h 192.168.178.202 -p 8883 --cafile ca.pem --cert cert.pem --key key.pem  -t "#" -v -d\

mosquitto_sub  -h 192.168.178.202 -p 8883 -t "#" -v -d \

docker exec -it 3f796358f646336c28102088c58562efb5c1a66444565f7a9ccfa3b2054e618a /bin/sh
docker exec -it 38bb57e43ff26427360d02e9d64f6f29258209edcb41bb57f8f572886a8e5e52 /bin/sh
vim .config/yabai/yabairc
cd .config/skhd/skhdrc
vim .config/skhd/skhdrc
mkdir nvim
touch lua
rm lua
mkdir lua
mkdir kevin
touch options.lua
vim options.lua
cd lua/kevin/options.lua
nvim lua/kevin/options.lua 
nvim lua/kevin/keymaps.lua
nvim init.lua 
mkdir plugins
touch plugins.lua
nvim plugins.lua
nvim lua
nvim lua/kevin/options.lua
cd lua/kevin
touch colorscheme.lua
cd init.lua
nvim init.lu
rm init.lu
cd advatens
cd server
.config
cd plugins
cd lua/kevin/plugins.lua
nvim lua/kevin/colorscheme.lua
nvim lua/kevin/cmp.lua
nvim lua/kevin/plugins.lua
cd kevin
mkdir lsp
cd lsp
touch init.lua
nvim kevin/cmp.lua
brew stop syncthing
brew services syncthing stop
brew services stop syncthing
ifconfig
rm -rf nvim
git clone git@github.com:KevinGruber2001/Neovim-from-scratch.git nvim
cd nvim/lua/plugins.lua
cd nvim/lua/user/plugins.lua
nano nvim/lua/user/plugins.lua
nvim nvim/lua/user/plugins.lua
vim init.ua
rm init.ua
nvim init.lua
vim init.lua
nvim nvim/lua.init
rm nvim/lua.init
nvim nvim/init.lua
nvim alacritty/alacritty.yml
nvim .config/nvim/lua/user/keymaps.lua
nvim .config/nvim/lua/user/colorscheme.lua
cd .config/nvim/lua/user/options.lua
nvim .config/nvim/lua/user/options.lua
nvim .config/yabai/yabairc
brew install wget
brew uninstall utm
brew upgrade
brew services
brew install prettier
brew install black
brew install stylua
brew install ripgrep
brew install fd
nvim .config/nvim/lua/user/whichkey.lua
brew install opam
opam init
eval $(opam env)
opam install dune merlin ocaml-lsp-server odoc ocamlformat utop dune-release
dune 
opam user-setup install
opam install dune
ocaml -config
ocaml --version
ocaml 
opam --version
nvim .zshrc
cd Developer/Projecte
mkdir ocaml
cd ocaml
dune init project helloworld
cd helloworld
sudo dune exec ./bin/main.ml
chmod +777 ./bin/main.ml
chmod +xxx ./bin/main.ml
dune exec ./bin/main.ml
dune exec helloworld 
nvim Developer/Projecte/ocaml
nvim .config/nvim/lua/user/lsp/mason.lua
nvim Developer/Projecte/ocaml/helloworld
nvim .config/nvim/lua/user/lsp/null-ls.lua
cd Developer/Projecte/ocaml/helloworld
touch user.js
nvim user.js
cd /Library/
cd Application\ Support
cd /Users/kevingruber/Library/Application Support/Firefox/Profiles
brew install wimlib
diskutil list
cd /Users/kevingruber/Dokumente
docker-compose run --rm chirpstack-simulator make clean build
./build/chirpstack-simulator configfile > chirpstack-simulator.toml
git clone git@github.com:KevinGruber2001/chirpstack-simulator.git
nvim chirpstack-simulator
code chirpstack-simulator
ip config
ipconfig
ipconfig -a
ipconfig ipconfig getifaddr en0
cd Developer/Projecte/advatens/chirpstack-advatens
cd Developer/Projecte/advatens/
git clone https://github.com/UniCT-ARSLab/LWN-Simulator.git
code LWN-Simulator
ipconfig getifaddr en0
cd Developer/Projecte/advatens/LWN-Simulator
make intall-dep
nvim make
make install-dep
make run-release
make build
cd ../..//..
cd .config/nvim/lua/user/plugins.lua
brew services restart yabi
brew services restart skhd
yabai -m space --focus 1
nvim .config/nvim/lua/user/plugins.lua
gcc --version
cd Developer/Projecte/advatens/server/
cd app
code client_app
very_good update
rm -rf advatens_app
very_good create advatens_app
code advatens_app
cd Developer/Projecte/advatens/advatens_app
cd Developer/GAD
git clone https://github.com/JohannesStoehr/gad23-tests.git tests
cd w01
nvim tests
rm -rf tests
nvim tests/README.adoc
cd Developer/GAD/tests/w01/test/gad
cd ../../..//..
cd W01/H01/
mkdir test
mkdir gad
cd tests/w01/test/gad
;s
exa 
ln -s Developer/GAD/tests/w01/test/gad Developer/GAD/W01/H01/test/gad
cd Developer/GAD/W01/H01/test/gad
rm -rf gad
cd ../../..
rm -rf Developer/GAD/W01/H01/test/gad
ln -s Developer/GAD/tests/w01/test/gad Developer/GAD/W01/H01/test
gcc -o test test.c -g
mkdir GRA
mkdir W2
rm -rf W2
cd Wo2
cd Developer/GRA/W02/
mkdir isbn
touch isbn.c
cd ../../
cd GRA
mkdir W02
cd W02
git clone https://ge84qex@bitbucket.ase.in.tum.de/scm/GAD23E02/gad23e02-ge84qex.git H01
gcc -o n n.c
./n
touch n.c
nvim n.c
gcc -o isbn isbn.c
./isbn
cd Developer/GRA/W02
cd isbn
nvim isbn.c
unzip Developer/tools/ngrok-v3-stable-darwin-amd64.zip
ngrok --version
ngrok config 
cd ngrok
nano ngrok
nano ngrok.template.yml
brew install ngrok
ngrok
ngrok config add-authtoken 2P4IGTFFdzfU7M2LmjLkTF38ST5_25rQpMVechZJcGFNHjsRp
./gradlew clean build
docker build
docker build .
cd Developer/EIST/W02/H01
sh build.sh
docker build -t eist-ngrok
docker build . -t eist-ngrok
git commit -m "Added functionality"
ngrok config check
ngrok config update
ngrok config upgrade
cd /etc/ngrok.yml
git commit -m "some changes"
docker build -t eist-ngrok .
./build.sh
nvim Developer/GRA/W02/isbn/isbn.c
curl ifconfig.me
go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
protoc --go-out=plugins=grpc:chat chat.proto
mkdir chat
protoc --go_out=plugins=grpc:chat ./chat.proto
protoc --go_out=plugins=grpc:chat --go_opt=paths=source_relative chat.proto
protoc --go_out=plugins=grpc:chat chat.proto
protoc --go-grpc_out=plugins=grpc:chat chat.proto
protoc --go-grpc_out=grpc:chat chat.proto
protoc  ./chat.proto
protoc --go_out=./chat ./chat.proto
protoc --go_out=. --go_opt=paths=source_relative \\
    --go-grpc_out=. --go-grpc_opt=paths=source_relative \\
    chat.proto
protoc --go_out=. --go_opt=paths=source_relative \\
    --go-grpc_out=. --go-grpc_opt=paths=source_relative \\
    chat/chat.proto
cd Developer/Projecte/go/
mkdir grpc-demo
cd grpc-demo
go mod init github.com/KevinGruber2001/grpc-demo
brew services stop yabai
brew services start yabai
mkdir tutorial
cd tutorial
go mod init exemple.com/greetings
protoc --version
protoc \\
--go_out=invoicer \\
--go_opt=path=source_relative \\
--go-grpc_out=invoicer \ 
protoc \\
--go_out=invoicer \\
--go_opt=paths=source_relative \\
--gou-grpc_out=invoicer \ 
protoc \\
--go_out=invoicer \\
--go_opt=paths=source_relative \\
--go-grpc_out=invoicer \\
--go-grpc_opt=paths=source_relative \\
invoicer.proto
go get google.golang.org/protobuf/reflect/protoreflect
go get google.golang.org/grpc
cd Developer/Projecte/go
mkdir tutorial2
cd tutorial2
go mod init exemple.com/hello
go mod init example.com/greetings
go mod init example.com/hello
go mod 
cd ../greetings
go mod g
cd ../hello
go mod tidy
go run .
cd
cd Developer/Projecte/go/tutorial
cd hello
cd greetings
go mod edit -replace example.com/greetings=../greetings
cd Developer/Projecte/
mkdir c
cd c
cd Developer/GRA/
mkdir W03
cd W0
cd Ww03
cd W03
mkdir listavg
cd listavg
touch test.c
mkdir brainfuck
cd brainfuck
make 
make run
./brainfuck
./brainfuck '.'
./brainfuck "."
./brainfuck test
rm -rf test
gcc -o bf brainfuck.c
./bf
cd Developer/GRA/W03/brainfuck/brainfuck.c
nvim Developer/GRA/W03/brainfuck/brainfuck.c
minikube config defaults kubernetes-verson
rm -rf .minikube
brew uninstall minikube
brew install minikube
docker container prune
minikube start
minikube delete
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-arm64\
sudo install minikube-darwin-arm64 /usr/local/bin/minikube
kubectl
minikube start --driver=docker --alsologtostderr
minikube service hello-minikube
minikube service --url hello-minikube
minikube addons enable metrics-server
kubectl expose deployment hello-minikube --type=NodePort --port=8080
kubectl get nodes
minikube dashboard --URL
minikube dashboard
docker system prune
brew remove minikube
kubectl delete deployment hello-minikube
minikube start --driver=docker
kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4
alias k=kubectl
k
k deployment remove hello-minikube
k delete deployment hello-minikube
kubectl create deployment test --image=k8s.gcr.io/echoserver:1.4
kubectl expose deployment test --type=NodePort --port=8080
minikube service --url test
k port-forward service/test 8080/8000
k port-forward service/test 8080/8080
k port-forward service/test
k port-forward service/test 8080:8000
k port-forward service/test 8080:8080
k port-forward service/test 8000:8080
brew services start skhd
brew services restart yabai
cd Developer/GRA/W04
mkdir Memmem
cd Memmem
gcc -o test test.c -fsanitize=address
cd Developer/GRA/W04/Memmem
sudo yabai --uninstall-sa\
sudo yabai --install-sa\
sudo yabai --load-sa
sudo yabai --install-sa
sudo yabai --reinstall-sa
cd Developer/GRA/W04/
mkdir foldleft
cd foldleft
gcc -o test test.c
gcc -S test.c -masm=intel
nvim test.s
cd Developer/GRA/W04/foldleft
 gcc
gcc test.c -o test
./test
make all
maka
mkdir Developer/GRA/W05
mkdir touch
cd touch
rm -rf touch
mkdir round
cd round
nvim test.c
mv round ./Developer/GRA/W05
make clean
nvim ./Developer/GRA/W05/round/
cd Developer/GRA/W05
nvim round/test.c
cd Developer/GAD/W03/
cd Developer/GAD/W03/H01
git commit --allow-empty
git commit --allow-empty -m "Commit"
ocaml
ssh rh
exa
exa -l
cd Developer/
mkdir FPV
c FPV
cd FPV
mkdir W05
cd W05
mkdir W01
rm -rf W01
mkdir H01
cd H01
nvim helloworld.ml
ocamlc helloworld.ml
./a.out
nvim dune-project
mkdir H01_utop
cd H01_utop
nvim greeter.ml
brew install tmux
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
$XDG_CONFIG_HOME
nvim .tmux
mkdir tmux
cd tmux
nvim tmux.conf
mkdir testing
cd testing
mkdir first
dune init project first
cd first
dune exec ./bin/main.exe
dune exec
dune exed first
dune exec first
utop
mkdir H001
rm -rf H001
rm -rf H01
git clone https://ge84qex@bitbucket.ase.in.tum.de/scm/FPV23W05H01/fpv23w05h01-ge84qex.git H01
nvim H01
make
cd Developer/GRA
mkdir sdot
cd sdot
touch sdot.c
touch Makefile
nvim Makefile
tree
brew services start syncthing
brew services restart syncthing
cd Developer/FPV/W05
mkdir H02
rm -rf H02
git clone https://ge84qex@bitbucket.ase.in.tum.de/scm/FPV23W05H02/fpv23w05h02-ge84qex.git H02
mkdir W06
cd W06
git clone https://ge84qex@bitbucket.ase.in.tum.de/scm/FPV23W06H01/fpv23w06h01-ge84qex.git H01
code H01
git clone https://ge84qex@bitbucket.ase.in.tum.de/scm/FPV23W06H03/fpv23w06h03-ge84qex.git H03
cd Developer/GRA/W07/toupper_simd
cd Developer/FPV/W07
cd Developer/FPV/W06
cd H)#
cd H03
nvim .
cd .config/nvim
cd plugin
cd lua
cd tmp
nvim
cd /tmp
cd $XDG_CACHE_HOME
cd $XDG_CACHE_HOME/nvim
cd %TEMP%\nvim\my_on_attach.lua
tmux
cd .git
cd .config
cd nvim
ls -a
rm -rf .git
git init
git remote add origin git@github.com:KevinGruber2001/config-nvim.git
git branch -M main
git commit -m "Initial commit"
git push -u origin main
echo "deine mama"
grep deine mama
time
cd Developer/FPV/W06/H02
cd ../H03
cd ../bonus
git commit -m "not working"
cd Developer/Projecte/tractor-lock
nvim 
cd 
com
com "t"
nvim .config/zsh/.zshrc
clear
com "hallo"
git ..
git clone https://ge84qex@bitbucket.ase.in.tum.de/scm/FPV23W07H02/fpv23w07h02-ge84qex.git H02
cd H02
git commit -m "f1"
git commit -m "still f1"
dune build .
cd Developer/GAD/tests
cd Developer/FPV/W07/H01
cd ../..
cd GAD
git pull
cd w04
cd tests
cd test
cd gad
scselect "Home"
scselect "Uni"
nvim .config/skhd/skhdrc
git ad .
cd Developer/FPV/W07/
git clone https://ge84qex@bitbucket.ase.in.tum.de/scm/FPV23W07H03/fpv23w07h03-ge84qex.git H03
code H03
sudo yabai --load-sa
com "test"
dune build
dune utop .
git add .
git commit -m "test"
git push
cd Developer/FPV/
mkdir W08
git clone https://ge84qex@bitbucket.ase.in.tum.de/scm/FPV23W08H01/fpv23w08h01-ge84qex.git H01
cd W07/H02
code .
cd ../
cd W07
ls
cd ..
cd W08
ls 
code H02
